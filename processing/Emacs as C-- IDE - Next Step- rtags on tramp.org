#+TITLE: Emacs as C++ IDE - Next Step: rtags on tramp
#+URL: http://www.mycpu.org/emacs-rtags-helm-tramp/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 14日 星期五 12:24:25 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
In an [[http://www.mycpu.org/emacs-rtags-helm/][earlier post on Emacs as C++ IDE]], I had shown how to get up and running very quickly out of the box with rtags. While that setup is fantastic, a lot of my code is running remote machines too. This is specially true at work and it frequently cheats me off using my Emacs on the same level of satisfaction that I use it otherwise.
翻译:在[[http://www.mycpu.org/emacs-rtags-helm/][一篇关于Emacs作为C++IDE的早期文章]]中，我展示了如何快速地通过rtags让Emacs运行起来。虽然这个设置很棒，但我的很多代码也在远程机器上运行。这在工作中尤其如此，它经常让我无法像在其他情况下那样满意地使用Emacs。

#+BEGIN_EXAMPLE
This is a WIP, which needs to be verified on my setup that I cannot get to until
this is solved in the community https://github.com/Andersbakken/rtags/issues/1206#issuecomment-575368669
#+END_EXAMPLE

Sigh! These are the things why some people feel frustrated and give up. Give up? Give ... up? NO we are the brethren who suffer through untold pains to stay away from phrases like “simply works”.
翻译:叹息！这些就是为什么有些人会感到沮丧并放弃的原因。放弃？放弃...吗？不，我们是历经无数痛苦也要远离“仅仅工作”这类短语的兄弟们。

So I did what any insane Emacs user would do. Waste several hours searching for solutions on SO, Github etc and Voila! I found enough people with the same problems but alas none with a solution that works out of the box:
翻译:所以我做了任何一个疯狂的Emacs用户会做的事。浪费了好几个小时在SO、Github等地方寻找解决方案，哇塞！我发现了很多有同样问题的人，但遗憾的是，没有一个现成的解决方案可以用：

Copy the =rtags= binaries from your machine over to the remote machine and set it in an accessible path to Emacs. I put it in =$HOME/.emacs.d/rtags/bin/= Although, you can install rtags seperately over in the destination separately you need to be very careful to install the same versions of the package down to the last bit. Without this =rtags= starts crying about this mismatch.
翻译:从您的机器上将=rtags=的二进制文件复制到远程机器上，并将其设置在Emacs可访问的路径中。我将它放在了=$HOME/.emacs.d/rtags/bin=/尽管如此，您可以在目标机器上单独安装rtags，但您需要非常小心地安装与源机器上完全相同的包版本，包括最后的位数。没有这个=rtags=就会因为这种不匹配而开始抱怨。

#+BEGIN_EXAMPLE
(setq rtags-autostart-diagnostics t)
(setq rtags-tramp-enabled t)

;;;; This is similar to setting $PATH env var, but for TRAMP
(add-to-list 'tramp-remote-path "/home/ubuntu/.emacs.d/rtags/bin")

;;;; This is the same as --socket-address to rc
(setq rtags-socket-address "my-remote-machine:8998")

;;;; Gives you an unfair advantage
(setq rtags-rc-log-enabled t)
#+END_EXAMPLE

* Breaking it down
:PROPERTIES:
:CUSTOM_ID: breaking-it-down
:END:

Here are the items you must do to setup remote rtags and I will then give you the steps to verify if your installation is successful.
翻译:以下是你必须完成的步骤来设置远程rtags，然后我将告诉你如何验证安装是否成功。

- Set the variable =rtags-tramp-enabled= to =t=, the reason should be obvious.
翻译:将变量 =rtags-tramp-enabled= 设置为 =t=，原因应该很明显。
- Set the variable =tramp-remote-path= to point to the location where you copied over the =rc= and =rdm= binaries in the remote machine. This is how Emacs can access these binaries remotely.
翻译:将变量 =tramp-remote-path= 设置为指向你在远程机器上复制了 =rc= 和 =rdm= 二进制文件的目录位置。这样Emacs就可以远程访问这些二进制文件了。
- Set the variable =rtags-socket-address= to a val in =host_name:port= format. This is how Emacs apparently reaches the remote location.
翻译:将变量 `rtags-socket-address` 设置为以 `主机名:端口` 格式表示的值。这似乎是 Emacs 如何到达远程位置的方式。

```lisp
(set-variable 'rtags-socket-address "localhost:12345")
```

请注意，您需要根据实际的主机名和端口号替换 `"localhost:12345"`。
- And finally, the most important and crucial step of all. The one thing that gives you an unfair advantage in this struggle, the thing that's your “gun in a knife fight” is setting =rtags-rc-log-enabled= to =t= which clearly tells you about the error.
翻译:最后，最重要的也是最关键的一步。这是在这场斗争中给你不公平优势的东西，是你的“在刀战中拥有枪支”。将`set rtags-rc-log-enabled to t`设置为`t`可以清楚地告诉你有关错误的提示。

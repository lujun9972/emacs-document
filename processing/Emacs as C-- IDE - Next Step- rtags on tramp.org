#+TITLE: Emacs as C++ IDE - Next Step: rtags on tramp
#+URL: http://www.mycpu.org/emacs-rtags-helm-tramp/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 14日 星期五 12:24:25 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

在[[http://www.mycpu.org/emacs-rtags-helm/][一篇关于Emacs作为C++IDE的早期文章]]中，我展示了如何快速地通过rtags让Emacs运行起来。虽然这个设置很棒，但我的很多代码也在远程机器上运行。尤其是在工作场景下更是如此，它经常让我无法像在其他情况下那样满意地使用Emacs。

#+BEGIN_EXAMPLE
本项工作尚需在我的配置中进行验证，但前提是社区解决这个问题 https://github.com/Andersbakken/rtags/issues/1206#issuecomment-575368669
#+END_EXAMPLE

叹息！这些就是为什么有些人会感到沮丧并放弃的原因。放弃？放弃...吗？不，我们是历经无数痛苦也要远离“仅仅工作”这类短语的兄弟们。

所以我做了任何一个疯狂的Emacs用户会做的事。浪费了好几个小时在SO、Github等地方寻找解决方案，哇塞！我发现了很多有同样问题的人，但遗憾的是，没有一个现成的解决方案可以用：

从您的机器上将 =rtags= 的二进制文件复制到远程机器上，并将其设置在Emacs可访问的路径中。我将它放在了 =$HOME/.emacs.d/rtags/bin/= 下。当然，您也可以在目标机器上单独安装rtags，但您需要非常小心地安装与源机器上完全相同的包版本，包括最后的位数。否则 =rtags= 就会因为这种不匹配而无法正常工作。

#+begin_src emacs-lisp
  (setq rtags-autostart-diagnostics t)
  (setq rtags-tramp-enabled t)

  ;;;; This is similar to setting $PATH env var, but for TRAMP
  (add-to-list 'tramp-remote-path "/home/ubuntu/.emacs.d/rtags/bin")

  ;;;; This is the same as --socket-address to rc
  (setq rtags-socket-address "my-remote-machine:8998")

  ;;;; Gives you an unfair advantage
  (setq rtags-rc-log-enabled t)
#+end_src

* 具体步骤
:PROPERTIES:
:CUSTOM_ID: breaking-it-down
:END:

以下是你设置远程rtags的必须动作，然后我将告诉你如何验证安装是否成功。

- 将变量 =rtags-tramp-enabled= 设置为 =t=, 原因应该很明显。
- 将变量 =tramp-remote-path= 设置为指向你在远程机器上复制的 =rc= 和 =rdm= 二进制文件所在的目录位置。这样Emacs就可以远程访问这些二进制文件了。
- 将变量 =rtags-socket-address= 设置为以 =主机名:端口= 格式表示的值。这明确指定了 Emacs 要访问的远程位置。
- 最后，最重要的也是最关键的一步。这是在这场斗争中给你不公平优势的东西，是你“在刀战中拥有的枪支”。将 =rtags-rc-log-enabled= 设置为 =t=,该配置会清楚地告诉你错误信息。

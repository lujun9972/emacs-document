#+TITLE: Automatic gtags integration for Emacs using Git
#+URL: https://posts.michaelks.org/automatic-gtags-integration-emacs-git/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 20日 星期四 22:23:29 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* Automatic gtags integration for Emacs using Git
:PROPERTIES:
:CUSTOM_ID: automatic-gtags-integration-for-emacs-using-git
:END:

在Vim中设置自动ctags钩子是比较常见的，但直到最近，我才能够在Emacs中实现这一点。下面是如何做到这一点的步骤。

翻译:首先，创建一个目录来存放将要添加到所有新仓库中的git钩子。

#+begin_src shell
  git config --global init.templatedir '~/.git_template'
  mkdir -p ~/.git_template/hooks
#+end_src

下一步，添加main脚本。将其放置在 =~/.git_template/hooks/gtags= 文件中，并标记为可执行：

#+begin_src shell
  #!/bin/sh
  set -o errexit -o nounset

  PATH="/usr/local/bin:$PATH"

  main() (
  root_dir="$(git rev-parse --show-toplevel)"
  git_dir="$(git rev-parse --git-dir)"

  cd "$root_dir"
  trap 'rm -f GPATH GRTAGS GTAGS gtags.files' EXIT
  git grep --cached --files-with-matches "" > gtags.files
  gtags --gtagslabel=pygments
  rm gtags.files
  mv GPATH GRTAGS GTAGS "$git_dir/"

  echo "gtags index created at $git_dir/GTAGS"
  )

  main
#+end_src

请注意生成的标签文件汇放置在 =.git= 目录中，从而避免扰乱目录树并且无需在 =.gitignore= 中添加另一个条目。对我来说，这是最重要的特点---它让我感觉到真正的一体化和无缝连接。

接下来，添加包含该脚本的钩子。最重要的三个钩子是 =post-commit=、=post-merge= 和 =post-checkout= ，并且应该包含以下内容：

#+begin_src shell
  #!/bin/sh
  .git/hooks/gtags >/dev/null 2>&1 &
#+end_src

翻译:最后，为 =post-rewrite= 添加如下内容。

#+BEGIN_EXAMPLE
#!/bin/sh
case "$1" in
rebase) exec .git/hooks/post-merge ;;
esac
#+END_EXAMPLE

一旦完成，请在现有仓库中使用 =git init= 和 =git gtags= 命令来复制钩子并生成标签。新仓库将会自动执行此操作。

Emacs能否使用改功能取决于您安装了哪个gtags包。不幸的是， =global= 包没有直接更改从哪里读取tag文件的功能选项，而且我所见过的任何gtags包都没有这个选项。好在，可以通过设置两个环境变量来实现这一功能，分别是 =GTAGSROOT= 和 =GTAGSDBPATH= 。

#+begin_src emacs-lisp
  (defun gtags-env-patch (orig &rest args)
    (if-let* ((project-root (file-truename (locate-dominating-file "." ".git")))
              (git-dir (expand-file-name ".git" project-root))
              (process-environment (append
                                    (list (format "GTAGSROOT=%s" project-root)
                                          (format "GTAGSDBPATH=%s" git-dir))
                                    process-environment)))
        (apply orig args)
      (apply orig args)))
#+end_src

然后，您可以使用[[https://www.gnu.org/software/emacs/manual/html_node/elisp/Advising-Functions.html][advice]] 来包装适当的函数

对于[[https://github.com/syohex/emacs-counsel-gtags][counsel-gtags]]（即ivy completion）：

#+begin_src emacs-lisp
  (advice-add #'counsel-gtags-find-reference :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-find-symbol :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-find-definition :around #'gtags-env-patch)
  (advice-add #'counsel-gtags-dwim :around #'gtags-env-patch)
#+end_src

对于[[https://github.com/syohex/emacs-helm-gtags][helm-gtags]]：

#+begin_src emacs-lisp
  (advice-add #'helm-gtags-find-tag :around #gtags-env-patch)
  (advice-add #'helm-gtags-dwim :around #'gtags-env-patch)
  (advice-add #'helm-gtags-find-tag-other-window #'gtags-env-patch)
#+end_src

就是这样。现在，每当新的仓库检出、提交或变基时，它们都会被自动索引，标签文件也将无缝地被找到，无需任何用户输入。

一个工作示例可以在我的配置仓库的 [[https://github.com/msanders/setup/blob/master/symlinks/git/.git_template/hooks][这里]] 中找到

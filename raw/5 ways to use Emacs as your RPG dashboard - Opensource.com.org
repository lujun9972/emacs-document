#+TITLE: 5 ways to use Emacs as your RPG dashboard | Opensource.com
#+URL: https://opensource.com/article/20/1/emacs-rpgs
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 02月 10日 星期一 09:57:23 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
玩桌面角色扮演游戏（RPG）有两种方式：你可以玩由游戏的出版商或独立作者编写的冒险故事，或者边玩边创造一个冒险故事。无论你选择哪种方式，你可能都需要做一些准备工作。一名玩家（通常被称为游戏主持人）必须收集怪物或敌人的统计数据、战利品表以及规则参考，而其他玩家则必须建立角色并分配（虚假的）装备。没有什么能完全消除复杂RPG中的准备工作，但如果你是[[https://opensource.com/life/16/2/intro-to-emacs][Emacs]]的用户，你可能会发现Emacs是一个非常棒的仪表板，可以帮助你整理所有事情。

** 组织规则
:PROPERTIES:
:CUSTOM_ID: organize-the-rules
:END:

翻译:很遗憾，许多角色扮演游戏（RPG）的数字版是以PDF形式分发的，因为这是游戏出版商发送给印刷厂用于印刷实体时的文件。PDF在保留排版方面做得很好，但远不是一种理想化的电子书格式。如果您玩的是在开放许可下出版的角色扮演游戏，您通常可以获取其他格式（例如HTML）的规则，这给了你更多的控制权和灵活性。即使是世界上第一个也是最著名的角色扮演游戏，《龙与地下城》（Dungeons & Dragons），也提供了其规则的免费下载（许多网站已经将其转换为HTML和Markdown格式）。

翻译:我将规则以Markdown格式在Emacs中打开，以便随时有一个可搜索的参考资料。虽然以PDF格式在PDF阅读器中打开规则也可以让您搜索嵌入的文字，但使用文本文档而不是PDF有几个好处。首先，文本文档比PDF小得多，因此加载和搜索速度更快。其次，文本文档易于编辑，所以如果您发现一条需要澄清的规则（或者您编造的内容），您可以直接将其添加到您的主文档中。您还可以添加自己的规则和额外的资源。我的目标是拥有一个包含我在游戏中使用的所有规则和资源的单个文件，只需快速按下*Ctrl+s*（在Emacs表示法中为*C-s*）即可访问一切。

** 管理行动力
:PROPERTIES:
:CUSTOM_ID: manage-initiatives
:END:

大多数角色扮演游戏系统都提供了一种确定战斗中行动顺序的方法。这通常被称为行动力，这是一个很重要的概念，因为游戏中的冲突往往涉及战斗或某种对立的竞争行为。使用铅笔和纸张跟踪战斗并不难，但在那些已经在使用数字资产的游戏中，我发现全程数字化更容易。幸运的是，备受推崇的[[https://orgmode.org/][Org模式]]提供了一个出色的解决方案。

当玩家投掷行动力时，我将他们的名字输入到Emacs的scratch缓冲区中。然后我再输入每个怪物或敌人，以及每个敌人的攻击力或生命值（HP），后面跟着两列0：

#+BEGIN_EXAMPLE
brad

emily

zombie 22 0 0

zombie 22 0 0

flesh-golem 93 0 0
#+END_EXAMPLE

然后我选中玩家角色（PC）和怪物所在的区块，并使用 =org-table-create-or-convert-from-region= 函数创建一个围绕它的Org模式表格。使用 =Alt+下箭头= （在Emacs表示法中为 =M-down= ），我将每个PC或怪物移动到正确的行动顺序中。

#+BEGIN_EXAMPLE
| emily       |    |   |   |
| flesh-golem | 93 | 0 | 0 |
| zombie      | 22 | 0 | 0 |
| brad        |    |   |   |
| zombie      | 22 | 0 | 0 |
#+END_EXAMPLE

在战斗过程中，我只需要记录怪物的伤害值，因为玩家负责管理他们自己的生命值。对于我控制的敌人，第二列是它们的血量（其起始数值取自角色扮演游戏系统的规则），第三列是本回合造成的伤害。

表格公式在Org模式中是在表的末尾使用特殊的 =TBLFM= 行定义的。如果您曾经使用过任何计算机化电子表格，那么[[https://orgmode.org/manual/Tables.html][Org表格]]将会相当直观。我通过第二列减去第三列来追踪战斗结果。列是从左到右索引的（*$1*为第一列，*$2*为第二列，*$3*为第三列），因此要将列$2的内容替换为列$2和列$3的差，我会在表格底部添加这一行：

#+BEGIN_EXAMPLE
#+TBLFM: $2=vsum($2 - $3)
#+END_EXAMPLE

实际上，我并不是每次游戏进入战斗模式时就输入那段文字到Emacs中。相反，我已经在Emacs的[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs][缩写模式]]中定义了一个自动完成触发器，这个系统能够让你输入一个特殊字符串，Emacs会将其扩展为更复杂的内容。我在一个叫做 =~/.emacs.d/abbrev_defs= 的文件中定义了我的缩写，使用 =rpgi= 后跟一个 =空格= 作为触发器，让Emacs将行转换为我的行动力表格公式：

#+begin_src emacs-lisp
  (define-abbrev-table 'global-abbrev-table
    '(
      ("rpgi" "#+TBLFM: $2=vsum($2 - $3)" nil 0)
      ))

#+end_src

每次玩家对一个怪物造成伤害时，我在伤害栏中输入造成的伤害值。为了触发表格重新计算，我按下 =Ctrl+u Ctrl+c= （在Emacs中即为 =C-u C-c*= ）或者如果碰巧在公式行上则为“Ctrl+c Ctrl+c”（即* C-c C-c*）。

#+BEGIN_EXAMPLE
| brad        |    |    |
| emily       |    |    |
| zombie      | 12 | 10 |
| zombie      | 15 |  7 |
| flesh-golem | 91 |  2 |
#+TBLFM: $2=vsum($2 - $3)
#+END_EXAMPLE

这个系统并不完美。角色名称不能包含空格，因为Org表格通过空白来分割单元格。比较容易忘记你已经处理了一行，并在一轮结束时意外地重复又处理了一次。要向生物的总HP中添加HP时，必须使用一个负数。（我认为这是负伤害，也就是健康。）然而，许多计算机化的行动追踪器都存在相同的问题，所以这不是一个特别糟糕的解决方案。对我来说，这是我找到的最快的方法之一（我很乐意承认[[https://opensource.com/article/19/6/how-use-maptools][MapTool]]是最好的，但我不是在使用数字共享地图时使用我的Emacs工作流程）。

** 在DocView中查看PDF
:PROPERTIES:
:CUSTOM_ID: view-pdfs-in-docview
:END:

有时候PDF是不可避免的。无论是酒馆名字的d100列表还是地牢地图，一些资源仅以没有可提取文本数据的PDF形式存在。在这些情况下，Emacs的[[https://www.gnu.org/software/emacs/manual/html_node/emacs/Document-View.html][DocView]]包可以提供帮助。DocView mode 加载PDF数据并为您生成PNG文件来展示里面的内容（Emacs还可以查看JPEG文件）。我发现打开大型的PDF文件时存在问题并且运行缓慢，但如果是一张或两张低分辨率的PDF页面，DocView是在不离开Emacs的情况下引用文档的一个简单方法。

我专门用这个mode来处理地图、表格和列表。它不适合任何可能涉及搜索的内容，因为其无法访问文本数据，但对于只需浏览的文档来说，这是一个非常棒的功能。

大多数Linux发行版（或至少在你的仓库中可用）附带的[[https://www.ghostscript.com/][Ghostscript]]套件允许您处理PDF文件，通过将图像分辨率从打印质量降低到屏幕质量来大幅缩小它们的尺寸。该命令主要包含PostScript命令和属性，但您不需要成为PostScript专家即可快速执行降分辨率操作：

#+begin_src shell
  $ gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4
  -dPDFSETTINGS=/ebook -dNOPAUSE -dBATCH
  -sOutputFile=adventure.pdf
  -dDownsampleColorImages=true
  -dColorImageResolution=72 big-adventure-module.pdf
#+end_src

在Emacs中打开PDF文件并不像听起来那么令人兴奋。它绝对不是一个一流的PDF查看器，但对于特定的资源来说，它可以方便地让你把所有信息放在一个屏幕上。

** 创建冒险速查表
:PROPERTIES:
:CUSTOM_ID: create-adventure-rap-sheets
:END:

出版的冒险故事通常文字很多。原因是，你为准预制的冒险支付了很多钱，因此你当然会希望物有所值。我确实重视其中的背景故事和世界观构建，但在游戏过程中，我需要快速查阅相关信息，以确保游戏按预期进行。换句话说，我不需要知道为何要放置这个陷阱；我只需要知道陷阱存在，以及当盗贼触发时，盗贼需要掷多少骰子才能生存即可。

我还没有找到任何现代冒险格式能够做到只为我提供这样的必要信息，所以我最终会创建自己的“速查表”：一个针对冒险的简洁框架，仅包含每个地点所需的游戏机制信息。再一次，Org模式成为我便捷管理这些信息的最佳选择。

在Org模式中，你可以使用星号来创建项目列表。每添加一个星号表示下一级子项。更棒的是，可以通过 =C-c t= （按下*Ctrl+c*然后*t*键）可以将项目标记为*代办*项。当您的玩家完成了游戏中这一区域时，可以再次按下 =Ctrl+c t= 把这一位置标记为*完成*。

#+begin_example
  ,* DONE 1 Entrance

  ,** Zombie

  AC 9 | HP 22

  ,* TODO 2 Necromancer's chambers

  ,** Flesh golem

  AC 16 | HP 93

  ,** Treasure

  - Gold ring (200 gp)

  - Rusty nail (1 cp)

    Cursed (roll on curse table)

  ,** Secret door (DC 20)

  - to area 11
#+end_example

每个星号都可以折叠，因此你可以通过将列表折叠到仅剩下顶级条目来获取全局区域的摘要：

#+begin_example
  ,* DONE 1 Entrance

  ,* TODO 2 Necromancer's chambers

  ,* TODO 3 Wyrmling nursery

  ,* TODO 4 Caretaker's chambers

  ,* TODO 5 Caretaker's laboratory
#+end_example

一个额外的好处是：我发现制作自己的冒险速查表有助于我深入了解正在准备的这个冒险的游戏机制和背景知识，所以这种方法的好处很多。由于我用Git管理在Emacs中运行的所有冒险，一旦我为一个冒险完成准备工作，我所有的资源都会更新为最新的副本，不管这个副本是我在与其他玩家或者使用新角色来玩的。

** 创造自己的冒险经历
:PROPERTIES:
:CUSTOM_ID: make-your-own-adventure-journal
:END:

翻译:通常，我会让玩家自己记录关于冒险的经历，因为我希望鼓励玩家自行解读冒险中发生的事件。然而，游戏主持人需要私人笔记来整理所有的临时数据。例如，如果一个已出版的冒险故事中没有铁匠铺，但如果玩家决定去拜访一个铁匠，那么就需要现场创造一个铁匠。如果六周后玩家再次访问铁匠铺，他们期望见到同一个铁匠，这就需要游戏主持人跟踪这些对出版设定的补充内容。我根据可用资源的不同管理采取两种方法来管理我的冒险笔记：

翻译:如果我的冒险故事的文本是可编辑的（如HTML或Markdown格式），我就把我的补充内容加到冒险故事中，就好像出版商从一开始就包含了它们一样。这确保了唯一的设定和重大事件来源。

如果我没有能够获取到可编辑版本，可能它是一份硬拷贝或不易修改的PDF，那么我会把我的补充添加到Org模式下的速查表中。这实际上意味着仍然只有唯一的事实来源，因为我的速查表是我查找信息的第一站，只有在忘记细节时才会回过头去看发布的文本。有时甚至觉得我的补充好到完全可以将它们合并回Git主分支中，但通常我更愿意即兴创作，让每次玩这个冒险的小组动态地产生新的补充。]

** 为什么 Emacs 是我最爱的 RPG 控制面板
:PROPERTIES:
:CUSTOM_ID: why-emacs-is-my-favorite-rpg-dashboard
:END:

我之所以最终选择用Emacs玩RPG游戏，因为它就像我梦寐以求的平视显示器（HUD）。理论上"完美"的解决方案可能是一个优秀的的[[https://opensource.com/article/19/12/ratpoison-linux-desktop][平铺窗口管理器]]，但在真正实现之前，Emacs已经让我如鱼得水。所有操作都绑定在专为精确和速度设计的键盘快捷键上，其恰到好处的易定制性让我能在玩家们争论下一步行动时，甚至能当场临时拼凑出勉强可用的解决方案。
翻译:我陷入使用Emacs玩RPG游戏的原因是因为它充当了我梦想中的抬头显示器。"正确"的回答可能是一个好]，但在实现这一点之前，我对Emacs感到满意。一切都绑定到了为特定性和速度设计的键盘快捷方式上，而且有足够的简单自定义，我可以拼凑出足够好的解决方案——有时甚至在玩家们争论下一步该做什么的时候也能做到。

我尝试过通过多个桌面、一些PDF阅读器窗口和一个电子表格来进行游戏；虽然这种体验还不错，但还是没有使用Emacs作为我的RPG控制台那样流畅。
